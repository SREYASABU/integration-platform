{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreya\\\\Desktop\\\\automations_technical_assessment\\\\integration\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail) || e.message);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n      const credentials = response.data;\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: 'HubSpot'\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert((e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail) || e.message);\n    }\n  };\n  useEffect(() => {\n    setIsConnected((integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials) && (integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.type) === 'HubSpot');\n  }, [integrationParams]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [\"Parameters\", /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: isConnected ? () => {} : handleConnectClick,\n          color: isConnected ? 'success' : 'primary',\n          disabled: isConnecting,\n          style: {\n            pointerEvents: isConnected ? 'none' : 'auto',\n            cursor: isConnected ? 'default' : 'pointer',\n            opacity: isConnected ? 1 : undefined\n          },\n          children: isConnected ? 'HubSpot Connected' : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 73\n          }, this) : 'Connect to HubSpot'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(HubSpotIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","HubSpotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","message","credentials","prev","type","_e$response2","_e$response2$data","children","sx","mt","display","alignItems","justifyContent","variant","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sreya/Desktop/automations_technical_assessment/integration/frontend/src/integrations/hubspot.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    CircularProgress\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nexport const HubSpotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n    // Function to open OAuth in a new window\r\n    const handleConnectClick = async () => {\r\n        try {\r\n            setIsConnecting(true);\r\n            const formData = new FormData();\r\n            formData.append('user_id', user);\r\n            formData.append('org_id', org);\r\n            const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\r\n            const authURL = response?.data;\r\n\r\n            const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\r\n\r\n            // Polling for the window to close\r\n            const pollTimer = window.setInterval(() => {\r\n                if (newWindow?.closed !== false) {\r\n                    window.clearInterval(pollTimer);\r\n                    handleWindowClosed();\r\n                }\r\n            }, 200);\r\n        } catch (e) {\r\n            setIsConnecting(false);\r\n            alert(e?.response?.data?.detail || e.message);\r\n        }\r\n    }\r\n\r\n    // Function to handle logic when the OAuth window closes\r\n    const handleWindowClosed = async () => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('user_id', user);\r\n            formData.append('org_id', org);\r\n            const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\r\n            const credentials = response.data;\r\n            if (credentials) {\r\n                setIsConnecting(false);\r\n                setIsConnected(true);\r\n                setIntegrationParams(prev => ({ ...prev, credentials: credentials, type: 'HubSpot' }));\r\n            }\r\n            setIsConnecting(false);\r\n        } catch (e) {\r\n            setIsConnecting(false);\r\n            alert(e?.response?.data?.detail || e.message);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsConnected(integrationParams?.credentials && integrationParams?.type === 'HubSpot');\r\n    }, [integrationParams]);\r\n\r\n    return (\r\n        <>\r\n        <Box sx={{ mt: 2 }}>\r\n            Parameters\r\n            <Box display='flex' alignItems='center' justifyContent='center' sx={{ mt: 2 }}>\r\n                <Button\r\n                    variant='contained'\r\n                    onClick={isConnected ? () => {} : handleConnectClick}\r\n                    color={isConnected ? 'success' : 'primary'}\r\n                    disabled={isConnecting}\r\n                    style={{\r\n                        pointerEvents: isConnected ? 'none' : 'auto',\r\n                        cursor: isConnected ? 'default' : 'pointer',\r\n                        opacity: isConnected ? 1 : undefined\r\n                    }}\r\n                >\r\n                    {isConnected ? 'HubSpot Connected' : isConnecting ? <CircularProgress size={20} /> : 'Connect to HubSpot'}\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n      </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}