{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreya\\\\Desktop\\\\automations_technical_assessment\\\\integration\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Box, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const handleConnect = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post('/integrations/hubspot/authorize', {\n        user_id: user,\n        org_id: org\n      });\n      // Handle successful connection\n      setIsConnected(true);\n      setIntegrationParams({\n        type: 'HubSpot',\n        credentials: response.data.credentials\n      });\n    } catch (error) {\n      console.error('Connection failed:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"HubSpot Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), isConnected ? /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Connected to HubSpot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleConnect,\n      disabled: isLoading,\n      children: isLoading ? 'Connecting...' : 'Connect to HubSpot'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(HubSpotIntegration, \"Mp9ZoZFh1OJEKRf6ZqTzkbuoTq4=\");\n_c = HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["React","Button","Box","Typography","axios","jsxDEV","_jsxDEV","HubSpotIntegration","user","org","setIntegrationParams","_s","isConnected","setIsConnected","useState","isLoading","setIsLoading","handleConnect","response","post","user_id","org_id","type","credentials","data","error","console","sx","mt","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sreya/Desktop/automations_technical_assessment/integration/frontend/src/integrations/hubspot.js"],"sourcesContent":["import React from 'react';\r\nimport { Button, Box, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nexport const HubSpotIntegration = ({ user, org, setIntegrationParams }) => {\r\n    const [isConnected, setIsConnected] = React.useState(false);\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n    const handleConnect = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await axios.post('/integrations/hubspot/authorize', {\r\n                user_id: user,\r\n                org_id: org\r\n            });\r\n            // Handle successful connection\r\n            setIsConnected(true);\r\n            setIntegrationParams({\r\n                type: 'HubSpot',\r\n                credentials: response.data.credentials\r\n            });\r\n        } catch (error) {\r\n            console.error('Connection failed:', error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ mt: 2 }}>\r\n            <Typography variant=\"h6\">HubSpot Integration</Typography>\r\n            {isConnected ? (\r\n                <Typography>Connected to HubSpot</Typography>\r\n            ) : (\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={handleConnect}\r\n                    disabled={isLoading}\r\n                >\r\n                    {isLoading ? 'Connecting...' : 'Connect to HubSpot'}\r\n                </Button>\r\n            )}\r\n        </Box>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AACvD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,GAAG;EAAEC;AAAqB,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,KAAK,CAACc,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9BD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,iCAAiC,EAAE;QACjEC,OAAO,EAAEZ,IAAI;QACba,MAAM,EAAEZ;MACZ,CAAC,CAAC;MACF;MACAI,cAAc,CAAC,IAAI,CAAC;MACpBH,oBAAoB,CAAC;QACjBY,IAAI,EAAE,SAAS;QACfC,WAAW,EAAEL,QAAQ,CAACM,IAAI,CAACD;MAC/B,CAAC,CAAC;IACN,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACNT,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,oBACIV,OAAA,CAACJ,GAAG;IAACyB,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACfvB,OAAA,CAACH,UAAU;MAAC2B,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACxDtB,WAAW,gBACRN,OAAA,CAACH,UAAU;MAAA0B,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,gBAE7C5B,OAAA,CAACL,MAAM;MACH6B,OAAO,EAAC,WAAW;MACnBK,OAAO,EAAElB,aAAc;MACvBmB,QAAQ,EAAErB,SAAU;MAAAc,QAAA,EAEnBd,SAAS,GAAG,eAAe,GAAG;IAAoB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACvB,EAAA,CAxCWJ,kBAAkB;AAAA8B,EAAA,GAAlB9B,kBAAkB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}