{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreya\\\\Desktop\\\\automations_technical_assessment\\\\integration\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\";\n// frontend/src/integrations/hubspot.js\nimport React from 'react';\nimport { Button } from '@mui/material';\n\n// Integration configuration object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const hubspotConfig = {\n  id: \"hubspot\",\n  title: \"HubSpot\",\n  description: \"Connect to HubSpot and load contacts, companies, and deals\",\n  authorize: (user, org) => {\n    const formData = new FormData();\n    formData.append('user_id', user);\n    formData.append('org_id', org);\n    return fetch('/integrations/hubspot/authorize', {\n      method: 'POST',\n      body: formData\n    }).then(res => {\n      if (!res.ok) throw new Error('Authorization failed');\n      return res.json();\n    }).then(data => {\n      window.open(data.url || '/integrations/hubspot/authorize', '_blank');\n      return {\n        type: 'hubspot'\n      };\n    });\n  },\n  fetchItems: async credentials => {\n    const formData = new FormData();\n    formData.append('credentials', JSON.stringify(credentials));\n    const res = await fetch('/integrations/hubspot/get_hubspot_items', {\n      method: 'POST',\n      body: formData\n    });\n    if (!res.ok) {\n      const txt = await res.text();\n      throw new Error(\"Failed loading HubSpot items: \" + txt);\n    }\n    return await res.json();\n  },\n  getCredentials: async (user, org) => {\n    const formData = new FormData();\n    formData.append('user_id', user);\n    formData.append('org_id', org);\n    const res = await fetch('/integrations/hubspot/credentials', {\n      method: 'POST',\n      body: formData\n    });\n    if (!res.ok) throw new Error('Failed to get credentials');\n    return await res.json();\n  }\n};\n\n// React component that uses the integration\nconst HubSpotIntegration = ({\n  user,\n  org,\n  setIntegrationParams\n}) => {\n  const handleAuthorize = async () => {\n    try {\n      const params = await hubspotConfig.authorize(user, org);\n      setIntegrationParams(params);\n    } catch (error) {\n      console.error('Authorization failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleAuthorize,\n      children: \"Connect to HubSpot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_c = HubSpotIntegration;\nexport default HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","hubspotConfig","id","title","description","authorize","user","org","formData","FormData","append","fetch","method","body","then","res","ok","Error","json","data","window","open","url","type","fetchItems","credentials","JSON","stringify","txt","text","getCredentials","HubSpotIntegration","setIntegrationParams","handleAuthorize","params","error","console","Box","sx","mt","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sreya/Desktop/automations_technical_assessment/integration/frontend/src/integrations/hubspot.js"],"sourcesContent":["// frontend/src/integrations/hubspot.js\r\nimport React from 'react';\r\nimport { Button } from '@mui/material';\r\n\r\n// Integration configuration object\r\nexport const hubspotConfig = {\r\n  id: \"hubspot\",\r\n  title: \"HubSpot\",\r\n  description: \"Connect to HubSpot and load contacts, companies, and deals\",\r\n  \r\n  authorize: (user, org) => {\r\n    const formData = new FormData();\r\n    formData.append('user_id', user);\r\n    formData.append('org_id', org);\r\n    \r\n    return fetch('/integrations/hubspot/authorize', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n    .then(res => {\r\n      if (!res.ok) throw new Error('Authorization failed');\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      window.open(data.url || '/integrations/hubspot/authorize', '_blank');\r\n      return { type: 'hubspot' };\r\n    });\r\n  },\r\n\r\n  fetchItems: async (credentials) => {\r\n    const formData = new FormData();\r\n    formData.append('credentials', JSON.stringify(credentials));\r\n    \r\n    const res = await fetch('/integrations/hubspot/get_hubspot_items', {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n    \r\n    if (!res.ok) {\r\n      const txt = await res.text();\r\n      throw new Error(\"Failed loading HubSpot items: \" + txt);\r\n    }\r\n    \r\n    return await res.json();\r\n  },\r\n\r\n  getCredentials: async (user, org) => {\r\n    const formData = new FormData();\r\n    formData.append('user_id', user);\r\n    formData.append('org_id', org);\r\n    \r\n    const res = await fetch('/integrations/hubspot/credentials', {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n    \r\n    if (!res.ok) throw new Error('Failed to get credentials');\r\n    return await res.json();\r\n  }\r\n};\r\n\r\n// React component that uses the integration\r\nconst HubSpotIntegration = ({ user, org, setIntegrationParams }) => {\r\n  const handleAuthorize = async () => {\r\n    try {\r\n      const params = await hubspotConfig.authorize(user, org);\r\n      setIntegrationParams(params);\r\n    } catch (error) {\r\n      console.error('Authorization failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 2 }}>\r\n      <Button \r\n        variant=\"contained\" \r\n        onClick={handleAuthorize}\r\n      >\r\n        Connect to HubSpot\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HubSpotIntegration;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}