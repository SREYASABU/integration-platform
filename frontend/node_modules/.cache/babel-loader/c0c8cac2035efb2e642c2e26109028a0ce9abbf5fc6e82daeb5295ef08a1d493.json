{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreya\\\\Desktop\\\\automations_technical_assessment\\\\integration\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\n// frontend/src/integrations/hubspot.js\nimport React from 'react';\nimport { Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const hubspotConfig = {\n  id: \"hubspot\",\n  title: \"HubSpot\",\n  description: \"Connect to HubSpot and load contacts, companies, and deals\",\n  authorize: async (user, org) => {\n    try {\n      const response = await fetch('/integrations/hubspot/authorize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: user,\n          org_id: org\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Authorization failed');\n      }\n      const data = await response.json();\n      window.open(data.url || '/integrations/hubspot/authorize', '_blank');\n      return {\n        type: 'hubspot'\n      };\n    } catch (error) {\n      console.error('Authorization error:', error);\n      throw error;\n    }\n  },\n  fetchItems: async credentials => {\n    console.log('Fetching HubSpot items...');\n    try {\n      const response = await fetch('/integrations/hubspot/get_hubspot_items', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          credentials: credentials\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch items');\n      }\n      const items = await response.json();\n      console.log('HubSpot items:', items);\n      return items;\n    } catch (error) {\n      console.error('Error fetching HubSpot items:', error);\n      throw error;\n    }\n  },\n  getCredentials: async (user, org) => {\n    const response = await fetch('/integrations/hubspot/credentials', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: user,\n        org_id: org\n      })\n    });\n    if (!response.ok) throw new Error('Failed to get credentials');\n    return await response.json();\n  }\n};\nconst HubSpotIntegration = ({\n  user,\n  org,\n  setIntegrationParams\n}) => {\n  _s();\n  var _integrationParams2;\n  const [isLoading, setIsLoading] = useState(false);\n  const [items, setItems] = useState([]);\n  const handleAuthorize = async () => {\n    try {\n      const params = await hubspotConfig.authorize(user, org);\n      setIntegrationParams(params);\n    } catch (error) {\n      console.error('Authorization failed:', error);\n    }\n  };\n  const handleFetchItems = async () => {\n    var _integrationParams;\n    if (!((_integrationParams = integrationParams) !== null && _integrationParams !== void 0 && _integrationParams.credentials)) return;\n    setIsLoading(true);\n    try {\n      const fetchedItems = await hubspotConfig.fetchItems(integrationParams.credentials);\n      setItems(fetchedItems);\n    } catch (error) {\n      console.error('Error fetching items:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleAuthorize,\n      sx: {\n        mb: 2\n      },\n      children: \"Connect to HubSpot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), ((_integrationParams2 = integrationParams) === null || _integrationParams2 === void 0 ? void 0 : _integrationParams2.credentials) && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleFetchItems,\n      disabled: isLoading,\n      children: isLoading ? 'Loading...' : 'Fetch HubSpot Items'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), items.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(items, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(HubSpotIntegration, \"01anbulHxC9wtZEbn9rp9zaY7G8=\");\n_c = HubSpotIntegration;\nexport default HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["React","Button","Box","jsxDEV","_jsxDEV","hubspotConfig","id","title","description","authorize","user","org","response","fetch","method","headers","body","JSON","stringify","user_id","org_id","ok","Error","data","json","window","open","url","type","error","console","fetchItems","credentials","log","items","getCredentials","HubSpotIntegration","setIntegrationParams","_s","_integrationParams2","isLoading","setIsLoading","useState","setItems","handleAuthorize","params","handleFetchItems","_integrationParams","integrationParams","fetchedItems","sx","mt","children","variant","onClick","mb","fileName","_jsxFileName","lineNumber","columnNumber","color","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/sreya/Desktop/automations_technical_assessment/integration/frontend/src/integrations/hubspot.js"],"sourcesContent":["// frontend/src/integrations/hubspot.js\r\nimport React from 'react';\r\nimport { Button, Box } from '@mui/material';\r\n\r\nexport const hubspotConfig = {\r\n  id: \"hubspot\",\r\n  title: \"HubSpot\",\r\n  description: \"Connect to HubSpot and load contacts, companies, and deals\",\r\n  \r\n  authorize: async (user, org) => {\r\n    try {\r\n      const response = await fetch('/integrations/hubspot/authorize', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          user_id: user,\r\n          org_id: org\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Authorization failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      window.open(data.url || '/integrations/hubspot/authorize', '_blank');\r\n      return { type: 'hubspot' };\r\n    } catch (error) {\r\n      console.error('Authorization error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  fetchItems: async (credentials) => {\r\n    console.log('Fetching HubSpot items...');\r\n    try {\r\n      const response = await fetch('/integrations/hubspot/get_hubspot_items', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          credentials: credentials\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch items');\r\n      }\r\n\r\n      const items = await response.json();\r\n      console.log('HubSpot items:', items);\r\n      return items;\r\n    } catch (error) {\r\n      console.error('Error fetching HubSpot items:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getCredentials: async (user, org) => {\r\n    const response = await fetch('/integrations/hubspot/credentials', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        user_id: user,\r\n        org_id: org\r\n      })\r\n    });\r\n    \r\n    if (!response.ok) throw new Error('Failed to get credentials');\r\n    return await response.json();\r\n  }\r\n};\r\n\r\nconst HubSpotIntegration = ({ user, org, setIntegrationParams }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n\r\n  const handleAuthorize = async () => {\r\n    try {\r\n      const params = await hubspotConfig.authorize(user, org);\r\n      setIntegrationParams(params);\r\n    } catch (error) {\r\n      console.error('Authorization failed:', error);\r\n    }\r\n  };\r\n\r\n  const handleFetchItems = async () => {\r\n    if (!integrationParams?.credentials) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      const fetchedItems = await hubspotConfig.fetchItems(integrationParams.credentials);\r\n      setItems(fetchedItems);\r\n    } catch (error) {\r\n      console.error('Error fetching items:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 2 }}>\r\n      <Button \r\n        variant=\"contained\" \r\n        onClick={handleAuthorize}\r\n        sx={{ mb: 2 }}\r\n      >\r\n        Connect to HubSpot\r\n      </Button>\r\n      \r\n      {integrationParams?.credentials && (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={handleFetchItems}\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? 'Loading...' : 'Fetch HubSpot Items'}\r\n        </Button>\r\n      )}\r\n      \r\n      {items.length > 0 && (\r\n        <Box sx={{ mt: 2 }}>\r\n          <pre>{JSON.stringify(items, null, 2)}</pre>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HubSpotIntegration;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}