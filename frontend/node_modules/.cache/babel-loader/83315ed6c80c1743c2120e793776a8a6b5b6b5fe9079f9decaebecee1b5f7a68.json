{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreya\\\\Desktop\\\\automations_technical_assessment\\\\integration\\\\frontend\\\\src\\\\data-form.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, TextField, Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpointMapping = {\n  'Notion': 'notion',\n  'Airtable': 'airtable'\n};\nexport const DataForm = ({\n  integrationType,\n  credentials\n}) => {\n  _s();\n  const [loadedData, setLoadedData] = useState(null);\n  const endpoint = endpointMapping[integrationType];\n  const handleLoad = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('credentials', JSON.stringify(credentials));\n      const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n      const data = response.data;\n      setLoadedData(data);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this)\n  //     <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\n  //         <Box display='flex' flexDirection='column' width='100%'>\n  //             <TextField\n  //                 label=\"Loaded Data\"\n  //                 value={loadedData || ''}\n  //                 sx={{mt: 2}}\n  //                 InputLabelProps={{ shrink: true }}\n  //                 disabled\n  //             />\n  //             <Button\n  //                 onClick={handleLoad}\n  //                 sx={{mt: 2}}\n  //                 variant='contained'\n  //             >\n  //                 Load Data\n  //             </Button>\n  //             <Button\n  //                 onClick={() => setLoadedData(null)}\n  //                 sx={{mt: 1}}\n  //                 variant='contained'\n  //             >\n  //                 Clear Data\n  //             </Button>\n  //         </Box>\n  //     </Box>\n  ;\n};\n_s(DataForm, \"5cDt2cux/nLAg6lHurbYodgFI4w=\");\n_c = DataForm;\nvar _c;\n$RefreshReg$(_c, \"DataForm\");","map":{"version":3,"names":["useState","Box","TextField","Button","axios","jsxDEV","_jsxDEV","endpointMapping","DataForm","integrationType","credentials","_s","loadedData","setLoadedData","endpoint","handleLoad","formData","FormData","append","JSON","stringify","response","post","data","e","_e$response","_e$response$data","alert","detail","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sreya/Desktop/automations_technical_assessment/integration/frontend/src/data-form.js"],"sourcesContent":["import { useState } from 'react';\nimport {\n    Box,\n    TextField,\n    Button,\n} from '@mui/material';\nimport axios from 'axios';\n\nconst endpointMapping = {\n    'Notion': 'notion',\n    'Airtable': 'airtable',\n};\n\nexport const DataForm = ({ integrationType, credentials }) => {\n    const [loadedData, setLoadedData] = useState(null);\n    const endpoint = endpointMapping[integrationType];\n\n    const handleLoad = async () => {\n        try {\n            const formData = new FormData();\n            formData.append('credentials', JSON.stringify(credentials));\n            const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n            const data = response.data;\n            setLoadedData(data);\n        } catch (e) {\n            alert(e?.response?.data?.detail);\n        }\n    }\n\n    return (<div></div>\n    //     <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\n    //         <Box display='flex' flexDirection='column' width='100%'>\n    //             <TextField\n    //                 label=\"Loaded Data\"\n    //                 value={loadedData || ''}\n    //                 sx={{mt: 2}}\n    //                 InputLabelProps={{ shrink: true }}\n    //                 disabled\n    //             />\n    //             <Button\n    //                 onClick={handleLoad}\n    //                 sx={{mt: 2}}\n    //                 variant='contained'\n    //             >\n    //                 Load Data\n    //             </Button>\n    //             <Button\n    //                 onClick={() => setLoadedData(null)}\n    //                 sx={{mt: 1}}\n    //                 variant='contained'\n    //             >\n    //                 Clear Data\n    //             </Button>\n    //         </Box>\n    //     </Box>\n    );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SACIC,GAAG,EACHC,SAAS,EACTC,MAAM,QACH,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAG;EACpB,QAAQ,EAAE,QAAQ;EAClB,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMc,QAAQ,GAAGP,eAAe,CAACE,eAAe,CAAC;EAEjD,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACV,WAAW,CAAC,CAAC;MAC3D,MAAMW,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAE,sCAAqCR,QAAS,OAAM,EAAEE,QAAQ,CAAC;MAClG,MAAMO,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAC1BV,aAAa,CAACU,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOC,CAAC,EAAE;MAAA,IAAAC,WAAA,EAAAC,gBAAA;MACRC,KAAK,CAACH,CAAC,aAADA,CAAC,wBAAAC,WAAA,GAADD,CAAC,CAAEH,QAAQ,cAAAI,WAAA,wBAAAC,gBAAA,GAAXD,WAAA,CAAaF,IAAI,cAAAG,gBAAA,uBAAjBA,gBAAA,CAAmBE,MAAM,CAAC;IACpC;EACJ,CAAC;EAED,oBAAQtB,OAAA;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAArB,EAAA,CA3CYH,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}